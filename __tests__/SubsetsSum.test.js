import {subsetsSum} from '../src/DynamicProgramming/SubsetsSum'

test('example 1', () => {
  const change = [2, 3, 5, 6, 8, 10]
  const k = 10
  const answer = [[10], [8, 2], [5, 3, 2]]
  expect(subsetsSum(change, k)).toEqual(answer)
})

test('example 1', () => {
  const change = [1, 2, 3, 4, 5]
  const k = 10
  const answer = [[5, 4, 1], [5, 3, 2], [4, 3, 2, 1]]
  expect(subsetsSum(change, k)).toEqual(answer)
})

test('example 1', () => {
  const change = [1, 2, 3, 4, 5, 1, 1, 1, 1]
  const k = 8
  const answer = [[1, 1, 1, 1, 4], [1, 1, 1, 1, 3, 1], [1, 1, 1, 5], [1, 1, 1, 4, 1], [1, 1, 1, 3, 2], [1, 1, 1, 5], [1, 1, 1, 4, 1], [1, 1, 1, 3, 2], [1, 1, 5, 1], [1, 1, 4, 2], [1, 1, 3, 2, 1], [1, 1, 1, 5], [1, 1, 1, 4, 1], [1, 1, 1, 3, 2], [1, 1, 5, 1], [1, 1, 4, 2], [1, 1, 3, 2, 1], [1, 1, 5, 1], [1, 1, 4, 2], [1, 1, 3, 2, 1], [1, 5, 2], [1, 4, 3], [1, 4, 2, 1], [1, 1, 1, 5], [1, 1, 1, 4, 1], [1, 1, 1, 3, 2], [1, 1, 5, 1], [1, 1, 4, 2], [1, 1, 3, 2, 1], [1, 1, 5, 1], [1, 1, 4, 2], [1, 1, 3, 2, 1], [1, 5, 2], [1, 4, 3], [1, 4, 2, 1], [1, 1, 5, 1], [1, 1, 4, 2], [1, 1, 3, 2, 1], [1, 5, 2], [1, 4, 3], [1, 4, 2, 1], [1, 5, 2], [1, 4, 3], [1, 4, 2, 1], [5, 3], [5, 2, 1], [4, 3, 1]]
  expect(subsetsSum(change, k)).toEqual(answer)
})